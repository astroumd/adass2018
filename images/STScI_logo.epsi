%!PS-Adobe-2.0 EPSF-2.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (Stephen J Hulbert) (STScI)%%Title: (STScI logo trimmed)%%CreationDate: (5/9/00) (2:39 PM)%%BoundingBox: 184 -388 421 -255%%HiResBoundingBox: 184.9209 -387.3145 420.1396 -255.8774%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%%BeginPreview: 235 131 1 131% 00000000007FC00000000000000000000000000000000000000000000000% 000000001FFFFE0000000000000000000000000000000000000000000000% 00000000FC0007C000000000000000000000000000000000000000000000% 00000007C00000F800000000000000000000000000000000000000000000% 0000001E0000000F00000000000000000000000000000000000000000000% 000000780000000380000000000000000000000000000000000000000000% 000001C000000000E0000000000000000000000000000000000000000000% 000003800000000038000000000000000000000000000000000000000000% 00000600000000001C000000000000000000000000000000000000000000% 00001C00000000000E000000000000000000000000000000000000000000% 000038000000000003000000000000000000000000000000000000000000% 000060000000000001800000000000000000000000000000000000000000% 0000C0000000000000C00000000000000000000000000000000000000000% 000180000000000000600000000000000000000000000000000000000000% 000300000000000000300000000000000000000000000000000000000000% 000600000000000000180000000000000000000000000000000000000000% 0006000000000000000C0000000000000000000000000000000000000000% 000C00000000000000060000000000000000000000000000000000000000% 001800000000000000060000000000000000000000000000000000000000% 003000000000000000030000000000000000000000000000000000000000% 003000000000000000018000000000000000000000000000000000000000% 006000000000000000018000000000000000000000000000000000000000% 00400000007F00000000C000000000000000000000000000000000000000% 00C0000003FFF0000000C000000000000000000000000000000000000000% 00C000000F003C0000006000000000000000000000000000000000000000% 018000003800070000006000000000000000000000000000000000000000% 018000007000018000002000000000000000000000000000000000000000% 03000000E00000C000003000000000000000000000000000000000000000% 030000018000006000001000000000000000000000000000000000000000% 030000030000003000001800000000000000000000000000000000000000% 020000060000001800001800000000000000000000000000000000000000% 060000060000000C00001800000000000000000000000000000000000000% 0600000C0000000C00000800000000000000000000000000000000000000% 060000080000000600000800000000000000000000000000000000000000% 040000180000000600000C00000000000000000000000000000000000000% 040000180000000200000C00000000000000000000000000000000000000% 040000100000000300000C00000000000000000000000000000000000000% 0C0000300000000300000C00000000000000000000000000000000000000% 0C0000300000000100000400000000000000000000000000000000000000% 0C0000300000000300000C001A0000020003E00000000000000000000000% 5C000030000000010000074063BFFE03001F7FFFFC000000000000000000% FC00003000000003800007C180C7078700380E781C000000000000000000% CC000030000000010000044180C703C700E006700C000000000000000000% CC0000300000000380000CC3804701C781C006700C000000000000000000% CC0000300000000380000443800701CF81C0007004000000000000000000% CC0000380000000380000CC3800700EB8380007000000000000000000000% C40000780000000380000C43C00701C9C380007030000000000000000000% C40000380000000780000CC1F00701D9C780007020000000000000000000% C40000780000000780000C40FC0701D1E700007060000000000000000000% C600006C0000000E800008C07F0703B0E700007FE0000000000000000000% C600006C0000000E800018401F87FF20F700007060000000000000000000% C200006E0000001E800018C007C73C20F700007020000000000000000000% C200004F0000001C8000184001E7007FF700007000000000000000000000% C300006D8000003C800010C000E700607B80007000000000000000000000% C3000044C000006CC000304000E700403B80007000000000000000000000% C1800046600001C8C00030C200E700C03BC0027000000000000000000000% C180004638000308C0006042006700801DC0067006000000000000000000% C08000C61E000E08C00060C300C701801CE0067006000000000000000000% C0C000C63FC1FF1840004043018701801E700E700C000000000000000000% C0C000C2E0FFE1D8C000C0C3C30FC7E07FBE3EFEFC000000000000000000% C06000C3C0000070400180407C1545405507E15554000000000000000000% C07000C380000038400180C0000000000000000000000000000000000000% C03000C70000003C40030042000200000000000000000000000000000000% C038008F0000003C600300C3BBBFBBBBB83BBB83F803FE00FF03BB8BBB80% C01800990000003640060047DF5FFDF9F01FD7CC1C0F070381C3F1EFF7E0% C00C00B180000023600E00C60606F018E00701D80C1C038E00F0E07380E0% C00E00B180000061E01C004407026018E00700D80438019C0038E03B8060% C00700E080000061E03C00CC0602E008E007005804700098003CE03B8020% C00781C080000060E038004007006000E007001800E00038001CE01F8000% C003C1C080000060E07000C00600E020E007001C00E00078000EE01F8000% C001E1C0C000004060F0004007006060E007021F01E00070000EE01F8100% C001B180C00000C063A000C00700E060E007020FC1C00070000EE03B8180% C000D980400000C02760004007007FE0E007FE07F1C00070000FE07BFF00% C000CF80600000C03EC000C00600FAE0E007AE03F9C000F0000EF0F3EF80% C00067006000008038C0004007006060E00702007DC00070000FFFC38100% C00061C060000080F18000C00600E020E00702003FC00070000EE0038180% C00030F060000181C100004007006000E00700000FC00070000EE0038000% C000303C2000018F030000C00600E000E00700000FE00070000EE0038000% C000180F3000013C0200004007006000E007002006E000B8001CE0038000% C0001803F00003F0060000C00700E004E0170030067001B8001CE0038000% C0000C003FC17F800400004007006004E03700700678019C0038E0038020% C00006003BFFFB000C0000C00600F00CE07700F00C3C038E0070E0038020% C000060010000300180000400F00F01CF0F781D8180E070381E0E003C060% C000030018000200180000C03FC3FFFFFFFFFFCEF007FE00FF83FC0FFFE0% C00003001800020030000040000000000000000000000000000000000000% C000018008000600200000C0000000000000000000000000000000000000% C00001800800060060000040000000000000000000000000000000000000% C00000C008000600600000C07F803FEFFFBFFF803F83FEFBBE0000000000% C00000400C000400C0000040C1C0E077E7D5E7C01F0E077F5E0000000000% C00000600C000C00800000C180C38031C3C063C00438031C060000000000% C000003004000C018000004180470011C18023E00470011C030000000000% C000003004000C03000000C3804E0019C38022F004E0019C020000000000% C00000180400080700000043800E0001C180027804E0001C000000000000% C000000C06000806000000C3C01E00018380823805E00018080000000000% C00000060600180C00000041F01C0001C181821C05C0001C080000000000% C000000702001838000000C1FC1C00018381821E05C0001C180000000000% C000000183001070000000407F1C0001C1FF820F05C0001FF80000000000% C0000000E30010E0000000C03F9C000183C3820785C0001C380000000000% C0000000730013800000004007DC0001C181820385C0001C180000000000% C00000001F003E00000000C003FC0001C3808203C5C0001C080000000000% C000000007FFF8000000004000FC0001C1800201E5C0001C000000000000% C000000001FFE000000000C000FE000183800200F5E00018000000000000% C00000000180200000000042006E0009C18002007CE0009C000000000000% C000000001806000000000C200EF0019838012003CF00198010000000000% C0000000008060000000004300C78011C18012003C70011C010000000000% C000000000806000000000C300C3C039C3C032001C38039C030000000000% C000000001FFF000000000438181E073C3C0F3000C1E073E070000000000% C00000003FFFFF80000000C1FE007FCFFFFFFFC00407FCFFFF0000000000% C0000001F040C3F000000040000000000000000000000000000000000000% C000000F8040C03E000000C0000000000000000000000000000000000000% C000007C006080078000004000000003C300070300070000300030000000% C00001E000608001E00000C3FFE00FEC3BFFFFFFFFFFFC07FFFFFFFFC000% C00003800061800070000040E0F001181F07077707077001F0703701C000% C0000E00002180001C0000C0E0F801300E07026607026000A0703700C000% C0001C000021800007000040E0B801300C07037407037000C07017004000% C000700000310000038000C0E09C01700007006007006000C07007000000% C000E0000031000000C00040E09E01780007007007007000807007000000% C001800000330000006000C0E08F013C0007006007006000807007020000% C00300000013000000380040E087013F0007007007007000807007020000% C0060000001A0000001C00C0E083811FC0070070070070008070078E0000% C00C0000001A0000000E0040E081C107F007007007007000807007FE0000% C0180000001E0000000600C0E081E103F807006007006000807007020000% C0300000000E000000030040E080F1007C07007007007000807007030000% C0600000000E0000000180C0E08071003C07006007006000807007000000% C0400000000C00000000C040E08039001C07007007007000807007000000% C0C00000000C00000000E0C0E0803D000C07006007007000807007000000% C18000000004000000006040E0801F400C07007007007000807007000000% C380000000040000000030C0E0800F600C07007007007001807007006000% C30000000004000000001040E08007601C07007007007001007007004000% C600000000000000000018C0E0800770180700700700380300700780C000% DF5555555555555555555DC1FDC00338701FC1FC1FC01F1C01FC1FF7C000%%EndPreview%AI3_ColorUsage: Black&White%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 0 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 288 -360 288 -360%AI3_TileBox: 12 -725 564 5%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 149.5 -221.5 2.8468 1018 725 18 0 1 3 40 0 0%AI5_OpenViewLayers: 7%%PageOrigin:12 -725%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -31 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Yellow Stripe)(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [%AI3_Tile(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @(%AI6_BeginPatternLayer800 Ar0 J 0 j 3.6 w 4 M []0 d%AI3_Note:0 D0 XR8.1999 8.1999 m80.6999 8.1999 LS8.1999 22.6 m80.6999 22.6 LS8.1999 37.0001 m80.6999 37.0001 LS8.1999 51.3999 m80.6999 51.3999 LS8.1999 65.8 m80.6999 65.8 LS8.1999 15.3999 m80.6999 15.3999 LS8.1999 29.8 m80.6999 29.8 LS8.1999 44.1999 m80.6999 44.1999 LS8.1999 58.6 m80.6999 58.6 LS8.1999 73.0001 m80.6999 73.0001 LS%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp3 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Red & Yellow)(Red & Yellow) 0 2 Bd[0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BFBFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AFAFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999>01 %_Br[0 1 0.6 0 1 50 100 %_BS%_0 1 0.6 0 1 50 100 Bs0 0 1 0 1 50 0 %_BS%_0 0 1 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Blue Radial)(Yellow & Blue Radial) 1 2 Bd[<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCBCCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF><ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A29282827262625242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B0A090908070706050504030302010100>01 %_Br[0 0.08 0.67 0 1 50 14 %_BS%_0 0.08 0.67 0 1 50 14 Bs1 1 0 0 1 50 100 %_BS%_1 1 0 0 1 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc1 g(K=0) Pc0 g(K=100) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.75 g(K=25) Pc0.5 g(K=50) Pc0.25 g(K=75) Pc0 g(K=100) PcBb2 (Black & White) -7903.5 7831.5 0 0 1 0 0 1 0 0 Bg0 BB(Black & White) Pc0.25 0 0 0 k(C=25 M=0 Y=0 K=0) Pc0.5 0 0 0 k(C=50 M=0 Y=0 K=0) Pc0.75 0 0 0 k(C=75 M=0 Y=0 K=0) Pc1 0 0 0 k(C=100 M=0 Y=0 K=0) Pc0.25 0.25 0 0 k(C=25 M=25 Y=0 K=0) Pc0.5 0.5 0 0 k(C=50 M=50 Y=0 K=0) Pc0.75 0.75 0 0 k(C=75 M=75 Y=0 K=0) Pc1 1 0 0 k(C=100 M=100 Y=0 K=0) PcBb2 (Red & Yellow) -7903.5 7831.5 0 0 1 0 0 1 0 0 Bg0 BB(Red & Yellow) Pc0 0.25 0 0 k(C=0 M=25 Y=0 K=0) Pc0 0.5 0 0 k(C=0 M=50 Y=0 K=0) Pc0 0.75 0 0 k(C=0 M=75 Y=0 K=0) Pc0 1 0 0 k(C=0 M=100 Y=0 K=0) Pc0 0.25 0.25 0 k(C=0 M=25 Y=25 K=0) Pc0 0.5 0.5 0 k(C=0 M=50 Y=50 K=0) Pc0 0.75 0.75 0 k(C=0 M=75 Y=75 K=0) Pc0 1 1 0 k(C=0 M=100 Y=100 K=0) PcBb0 0 0 0 Bh2 (Yellow & Blue Radial) -7903.5 7831.5 0 0 1 0 0 1 0 0 Bg0 BB(Yellow & Blue Radial) Pc0 0 0.25 0 k(C=0 M=0 Y=25 K=0) Pc0 0 0.5 0 k(C=0 M=0 Y=50 K=0) Pc0 0 0.75 0 k(C=0 M=0 Y=75 K=0) Pc0 0 1 0 k(C=0 M=0 Y=100 K=0) Pc0.25 0 0.25 0 k(C=25 M=0 Y=25 K=0) Pc0.5 0 0.5 0 k(C=50 M=0 Y=50 K=0) Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0) Pc1 0 1 0 k(C=100 M=0 Y=100 K=0) Pc(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Yellow Stripe) Pc0.25 0.125 0 0 k(C=25 M=13 Y=0 K=0) Pc0.5 0.25 0 0 k(C=50 M=25 Y=0 K=0) Pc0.75 0.375 0 0 k(C=75 M=38 Y=0 K=0) Pc1 0.5 0 0 k(C=100 M=50 Y=0 K=0) Pc0.125 0.25 0 0 k(C=13 M=25 Y=0 K=0) Pc0.25 0.5 0 0 k(C=25 M=50 Y=0 K=0) Pc0.375 0.75 0 0 k(C=38 M=75 Y=0 K=0) Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0 0.25 0.125 0 k(C=0 M=25 Y=13 K=0) Pc0 0.5 0.25 0 k(C=0 M=50 Y=25 K=0) Pc0 0.75 0.375 0 k(C=0 M=75 Y=38 K=0) Pc0 1 0.5 0 k(C=0 M=100 Y=50 K=0) Pc0 0.125 0.25 0 k(C=0 M=13 Y=25 K=0) Pc0 0.25 0.5 0 k(C=0 M=25 Y=50 K=0) Pc0 0.375 0.75 0 k(C=0 M=38 Y=75 K=0) Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0 0.25 0 k(C=13 M=0 Y=25 K=0) Pc0.25 0 0.5 0 k(C=25 M=0 Y=50 K=0) Pc0.375 0 0.75 0 k(C=38 M=0 Y=75 K=0) Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0) Pc0.25 0 0.125 0 k(C=25 M=0 Y=13 K=0) Pc0.5 0 0.25 0 k(C=50 M=0 Y=25 K=0) Pc0.75 0 0.375 0 k(C=75 M=0 Y=38 K=0) Pc1 0 0.5 0 k(C=100 M=0 Y=50 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.25 0.125 0.125 0 k(C=25 M=13 Y=13 K=0) Pc0.5 0.25 0.25 0 k(C=50 M=25 Y=25 K=0) Pc0.75 0.375 0.375 0 k(C=75 M=38 Y=38 K=0) Pc1 0.5 0.5 0 k(C=100 M=50 Y=50 K=0) Pc0.25 0.25 0.125 0 k(C=25 M=25 Y=13 K=0) Pc0.5 0.5 0.25 0 k(C=50 M=50 Y=25 K=0) Pc0.75 0.75 0.375 0 k(C=75 M=75 Y=38 K=0) Pc1 1 0.5 0 k(C=100 M=100 Y=50 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0.25 0.125 0 k(C=13 M=25 Y=13 K=0) Pc0.25 0.5 0.25 0 k(C=25 M=50 Y=25 K=0) Pc0.375 0.75 0.375 0 k(C=38 M=75 Y=38 K=0) Pc0.5 1 0.5 0 k(C=50 M=100 Y=50 K=0) Pc0.125 0.25 0.25 0 k(C=13 M=25 Y=25 K=0) Pc0.25 0.5 0.5 0 k(C=25 M=50 Y=50 K=0) Pc0.375 0.75 0.75 0 k(C=38 M=75 Y=75 K=0) Pc0.5 1 1 0 k(C=50 M=100 Y=100 K=0) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.125 0.125 0.25 0 k(C=13 M=13 Y=25 K=0) Pc0.25 0.25 0.5 0 k(C=25 M=25 Y=50 K=0) Pc0.375 0.375 0.75 0 k(C=38 M=38 Y=75 K=0) Pc0.5 0.5 1 0 k(C=50 M=50 Y=100 K=0) Pc0.25 0.125 0.25 0 k(C=25 M=13 Y=25 K=0) Pc0.5 0.25 0.5 0 k(C=50 M=25 Y=50 K=0) Pc0.75 0.375 0.75 0 k(C=75 M=38 Y=75 K=0) Pc1 0.5 1 0 k(C=100 M=50 Y=100 K=0) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 100 Lb(Layer 1) Ln0 Au*u0 O0 g800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR283.5386 -305.8345 m281.1553 -304.7896 278.8042 -303.4507 278.8042 -300.5449 c278.8042 -297.1162 281.9063 -295.0264 285.106 -295.0264 c286.3794 -295.0264 288.2734 -295.2549 289.4814 -295.7451 c290.1016 -295.9736 290.0361 -296.3652 290.0693 -296.9531 c290.1016 -297.8018 290.167 -298.6509 290.2002 -299.5 c290.2002 -299.7285 290.0693 -299.8916 289.8408 -299.8916 c289.4814 -299.8916 289.416 -299.3691 289.3184 -299.1406 c288.5996 -296.8877 287.6201 -295.6797 285.0732 -295.6797 c282.9185 -295.6797 280.8613 -296.7896 280.8613 -299.1733 c280.8613 -301.9814 284.4531 -303.124 286.5752 -304.0386 c287.6528 -304.5283 289.0244 -305.2139 289.8076 -306.063 c290.7549 -307.1079 291.375 -308.5444 291.375 -309.9482 c291.375 -311.7769 290.4932 -313.4097 289.0898 -314.585 c287.6201 -315.793 285.7593 -316.2827 283.8652 -316.2827 c282.2651 -316.2827 280.3062 -315.8257 278.9346 -315.0093 c278.3799 -314.6504 278.4775 -313.7686 278.4775 -313.1812 c278.4775 -312.332 278.4775 -311.5156 278.5757 -310.667 c278.6084 -310.4058 278.7061 -310.0137 279.0654 -310.0137 c279.4897 -310.0137 279.4897 -310.8301 279.5225 -311.0913 c279.8491 -313.8994 281.3511 -315.6626 284.3223 -315.6626 c286.7715 -315.6626 289.1875 -313.9971 289.1875 -311.418 c289.1875 -308.8057 287.4243 -307.5322 285.2041 -306.5527 C283.5386 -305.8345 lf*U*u296.3057 -298.9448 m296.3057 -296.9204 296.4033 -296.1367 298.6563 -296.1367 c299.9951 -296.1367 301.3662 -296.3652 302.3789 -297.2793 c303.5215 -298.2593 304.0771 -299.7939 304.0771 -301.2632 c304.0771 -303.875 302.1504 -306.1606 299.4404 -306.1606 c298.6895 -306.1606 297.4814 -305.8994 296.8281 -305.5078 c296.1426 -305.1162 296.3057 -304.4956 296.3057 -303.7773 c296.3057 -298.9448 Lf1 D293.7256 -312.4951 m293.7256 -314.5522 293.8896 -315.2056 291.6035 -315.2056 c291.3096 -315.2056 290.7871 -315.1729 290.7871 -315.5972 c290.7871 -315.9565 291.0488 -316.0215 291.3428 -316.0215 c292.583 -316.0215 293.8242 -315.8911 295.0645 -315.8911 c296.3057 -315.8911 297.4805 -316.0215 298.7217 -316.0215 c299.0156 -316.0215 299.2764 -315.9565 299.2764 -315.5972 c299.2764 -315.1729 298.7217 -315.2056 298.4277 -315.2056 c296.1748 -315.1729 296.3057 -314.585 296.3057 -312.4951 C296.3057 -307.1079 l296.3057 -306.6831 296.2402 -306.1934 296.8281 -306.1934 c297.0889 -306.1934 297.3174 -306.2915 297.5459 -306.3569 C299.1133 -306.8794 l299.6357 -307.0425 299.8643 -307.1079 300.4521 -307.1079 c303.8154 -307.1079 306.7871 -304.626 306.7871 -301.1323 c306.7871 -299.4019 305.8398 -297.6387 304.4033 -296.6592 c303.0967 -295.7451 301.5947 -295.5488 300.0273 -295.5488 c298.2969 -295.5488 296.5996 -295.6797 294.8359 -295.6797 c293.6611 -295.6797 292.5508 -295.5488 291.375 -295.5488 c291.0488 -295.5488 290.8203 -295.647 290.8203 -296.0059 c290.8203 -296.4307 291.3428 -296.4307 291.6367 -296.4307 c293.9219 -296.4307 293.7256 -297.0508 293.7256 -299.1079 c293.7256 -312.4951 Lf*U*u0 D309.7227 -300.9263 m309.7881 -300.7632 310.0166 -299.9468 310.2773 -299.9468 c310.4736 -299.9468 310.7354 -300.7954 310.7998 -300.9263 C313.0205 -306.4771 l313.0205 -306.5425 313.249 -307.0649 313.249 -307.1953 c313.249 -307.5547 312.498 -307.4565 312.3018 -307.4565 C308.5469 -307.4565 l308.417 -307.4565 307.3721 -307.5874 307.3721 -307.2607 c307.3721 -307.1626 307.4375 -306.9668 307.4697 -306.8687 c309.7227 -300.9263 Lf306.3926 -309.7422 m306.8818 -308.5669 306.6865 -308.436 307.9922 -308.436 C312.4326 -308.436 l314 -308.436 313.7715 -308.436 314.457 -310.1016 C315.502 -312.583 l315.665 -313.0073 315.959 -313.7256 315.959 -314.1831 c315.959 -315.1626 314.7188 -315.1626 313.8691 -315.1626 c313.543 -315.1626 312.9229 -315.1626 312.9229 -315.6523 c312.9229 -315.9463 313.249 -315.9785 313.4453 -315.9785 c314.6533 -315.9785 315.8936 -315.8481 317.0693 -315.8481 c318.5059 -315.8481 319.9424 -315.9785 321.3789 -315.9785 c321.543 -315.9785 321.8691 -315.9463 321.8691 -315.6523 c321.8691 -315.1626 321.249 -315.1626 320.9219 -315.1626 c319.3223 -315.1626 318.7676 -313.2686 318.2451 -311.9951 C311.6494 -295.604 l311.584 -295.4082 311.4531 -294.9834 311.1924 -294.9834 c310.833 -294.9834 310.7354 -295.4409 310.6367 -295.7021 C304.335 -312.0605 l304.1064 -312.6807 303.5186 -314.1831 303.0947 -314.6401 c302.6699 -315.0972 302.0498 -315.1626 301.4619 -315.1626 c301.168 -315.1626 300.5479 -315.1626 300.5479 -315.6196 c300.5479 -316.1748 301.3965 -315.9785 301.7227 -315.9785 c302.6367 -315.9785 303.5518 -315.8481 304.4658 -315.8481 c305.3799 -315.8481 306.2939 -315.9785 307.208 -315.9785 c307.5352 -315.9785 307.9922 -315.9785 307.9922 -315.5869 c307.9922 -315.1299 307.4375 -315.1626 307.1436 -315.1626 c306.3926 -315.1626 304.9551 -315.0645 304.9551 -313.9868 c304.9551 -313.3994 305.2168 -312.7134 305.4131 -312.1909 c306.3926 -309.7422 Lf*U*u335.2705 -299.6528 m335.2705 -299.9141 335.1719 -300.0771 334.9111 -300.0771 c334.0625 -300.0771 333.8008 -295.8979 328.7402 -295.8979 c323.2539 -295.8979 320.5439 -300.5996 320.5439 -305.4976 c320.5439 -307.8159 321.1973 -310.0034 322.5684 -311.8975 c324.0703 -313.9541 326.0947 -315.3584 328.7402 -315.3584 c333.8008 -315.3584 334.1924 -310.2319 335.0742 -310.2319 c335.3359 -310.2319 335.4658 -310.4277 335.4336 -310.6563 c335.2705 -313.3013 L335.2051 -314.3135 335.2373 -314.3789 334.2256 -314.8687 c332.2988 -315.7827 330.4707 -316.2397 328.3154 -316.2397 c322.373 -316.2397 317.6387 -311.3096 317.6387 -305.5303 c317.6387 -299.4897 322.9932 -294.9834 328.9688 -294.9834 c330.4375 -294.9834 332.7236 -295.3755 334.127 -295.8652 c335.0742 -296.1919 334.9434 -296.6162 335.042 -297.5303 C335.2705 -299.6528 lf*U*u340.2988 -302.8198 m340.2988 -304.3545 340.5928 -304.3545 341.9307 -304.3545 c342.9111 -304.3545 344.6084 -304.3872 345.8818 -304.2241 c346.6982 -304.126 346.8613 -302.918 347.0244 -301.9712 c347.0576 -301.7754 347.1553 -301.416 347.4492 -301.416 c347.6123 -301.416 347.8086 -301.4814 347.8086 -301.7427 c347.7754 -302.6567 347.7109 -303.6362 347.6455 -304.5508 c347.7109 -305.5957 347.7754 -306.5752 347.8086 -307.6196 c347.8086 -308.1421 347.6123 -308.2075 347.4492 -308.2075 c347.1553 -308.2075 347.0576 -307.8486 347.0244 -307.6523 c346.8613 -306.7056 346.6006 -305.7261 345.8818 -305.563 c344.6084 -305.269 342.9111 -305.269 341.9307 -305.269 c340.625 -305.269 340.2988 -305.269 340.2988 -306.3789 c340.2988 -312.0605 L340.2988 -315.0645 341.7354 -315.0972 344.3145 -315.0972 c347.123 -315.0972 348.9189 -315.0317 350.0293 -312.1587 c350.127 -311.9297 350.3555 -311.0483 350.7471 -311.0483 c350.9756 -311.0483 351.0732 -311.1787 351.0732 -311.4077 c351.0732 -311.6689 351.0088 -311.9297 350.9434 -312.1909 c350.4531 -315.6523 L350.4209 -315.8809 350.3555 -315.8481 350.0938 -315.8481 c337.3271 -315.8481 L336.6738 -315.8481 335.9561 -315.9785 335.3027 -315.9785 c335.0088 -315.9785 334.748 -315.8481 334.748 -315.4888 c334.748 -315.1299 335.2705 -315.0972 335.5967 -315.0972 c337.8496 -315.0972 337.7188 -314.4443 337.7188 -312.3545 c337.7188 -299.0649 L337.7188 -297.0405 337.8496 -296.3877 335.5967 -296.3877 c335.2705 -296.3877 334.748 -296.3877 334.748 -295.9956 c334.748 -295.6694 335.0088 -295.5059 335.3027 -295.5059 c337.3271 -295.5059 339.417 -295.6367 341.4414 -295.6367 c344.249 -295.6367 346.9922 -295.5059 349.7676 -295.5059 c350.3877 -295.5059 350.2246 -296.2896 350.2246 -296.7144 c350.2246 -299.522 L350.2246 -299.7183 350.2578 -300.208 349.9307 -300.208 c349.6367 -300.208 349.5068 -299.7832 349.4082 -299.5547 c348.9189 -298.6406 L348.4287 -297.6284 347.9717 -297.0405 346.8945 -296.7144 c345.8164 -296.3877 344.4131 -296.3877 343.3027 -296.3877 c342.7803 -296.3877 341.3438 -296.3877 340.8213 -296.5835 c340.2002 -296.812 340.2988 -297.5303 340.2988 -298.0854 C340.2988 -302.8198 lf*U*u287.8955 -335.9619 m287.8955 -338.0518 287.7651 -338.6724 290.0176 -338.6724 c290.3115 -338.6724 290.8672 -338.6396 290.8672 -339.064 c290.8672 -339.4233 290.6055 -339.4883 290.3115 -339.4883 c289.0713 -339.4883 287.8955 -339.3579 286.6548 -339.3579 c285.4141 -339.3579 284.1733 -339.4883 282.9326 -339.4883 c282.6387 -339.4883 282.3774 -339.4233 282.3774 -339.064 c282.3774 -338.6396 282.8999 -338.6724 283.1938 -338.6724 c285.4795 -338.6724 285.3164 -338.019 285.3164 -335.9619 c285.3164 -320.8442 L285.3164 -319.6689 284.8916 -319.8975 283.8794 -319.8975 c280.9082 -319.8975 279.7002 -320.1914 278.1328 -322.8032 c278.002 -323.0317 277.7407 -323.5869 277.4146 -323.5869 c277.186 -323.5869 277.0879 -323.4238 277.0879 -323.1953 c277.0879 -322.9668 277.2183 -322.5747 277.2837 -322.4116 c278.5571 -318.167 L278.6226 -317.9385 278.688 -317.7095 278.9814 -317.7095 c279.1777 -317.7095 279.2754 -317.873 279.2754 -318.0688 c279.3081 -318.3628 279.2754 -318.5586 279.5366 -318.7544 c279.9614 -319.1138 280.647 -319.0156 281.1694 -319.0156 c293.0225 -319.0156 L293.8711 -319.0156 294.6875 -319.1792 295.0137 -318.2646 c295.1113 -318.0034 295.1768 -317.7095 295.5039 -317.7095 c295.9609 -317.7095 295.7979 -318.6567 295.7979 -318.8853 c295.6016 -322.8687 L295.6016 -323.1299 295.5693 -323.4238 295.21 -323.4238 c294.9814 -323.4238 294.916 -323.1626 294.8506 -322.9668 c294.6221 -322.2808 294.3936 -321.3667 293.9033 -320.7461 c293.1855 -319.8975 292.2715 -319.8975 291.2588 -319.8975 c289.3652 -319.8975 L287.8955 -319.8975 287.8955 -319.832 287.8955 -321.4971 C287.8955 -335.9619 lf*U*u299.6826 -326.3296 m299.6826 -327.8643 299.9766 -327.8643 301.3154 -327.8643 c302.2949 -327.8643 303.9922 -327.897 305.2656 -327.7339 c306.082 -327.6357 306.2461 -326.4277 306.4092 -325.481 c306.4414 -325.2852 306.5391 -324.9258 306.833 -324.9258 c306.9971 -324.9258 307.1924 -324.9912 307.1924 -325.2524 c307.1602 -326.1665 307.0947 -327.146 307.0293 -328.0605 c307.0947 -329.1055 307.1602 -330.085 307.1924 -331.1294 c307.1924 -331.6519 306.9971 -331.7173 306.833 -331.7173 c306.5391 -331.7173 306.4414 -331.3584 306.4092 -331.1621 c306.2461 -330.2153 305.9844 -329.2358 305.2656 -329.0728 c303.9922 -328.7788 302.2949 -328.7788 301.3154 -328.7788 c300.0088 -328.7788 299.6826 -328.7788 299.6826 -329.8887 c299.6826 -335.5703 L299.6826 -338.5742 301.1191 -338.6069 303.6992 -338.6069 c306.5068 -338.6069 308.3027 -338.5415 309.4131 -335.6685 c309.5107 -335.4395 309.7393 -334.5581 310.1309 -334.5581 c310.3594 -334.5581 310.458 -334.6885 310.458 -334.9175 c310.458 -335.1787 310.3926 -335.4395 310.3271 -335.7007 c309.8369 -339.1621 L309.8047 -339.3906 309.7393 -339.3579 309.4785 -339.3579 c296.7109 -339.3579 L296.0586 -339.3579 295.3398 -339.4883 294.6865 -339.4883 c294.3926 -339.4883 294.1318 -339.3579 294.1318 -338.9985 c294.1318 -338.6396 294.6543 -338.6069 294.9805 -338.6069 c297.2334 -338.6069 297.1035 -337.9541 297.1035 -335.8643 c297.1035 -322.5747 L297.1035 -320.5503 297.2334 -319.8975 294.9805 -319.8975 c294.6543 -319.8975 294.1318 -319.8975 294.1318 -319.5054 c294.1318 -319.1792 294.3926 -319.0156 294.6865 -319.0156 c296.7109 -319.0156 298.8008 -319.1465 300.8252 -319.1465 c303.6338 -319.1465 306.376 -319.0156 309.1514 -319.0156 c309.7725 -319.0156 309.6084 -319.7993 309.6084 -320.2241 c309.6084 -323.0317 L309.6084 -323.228 309.6416 -323.7178 309.3145 -323.7178 c309.0215 -323.7178 308.8906 -323.293 308.793 -323.0645 c308.3027 -322.1504 L307.8125 -321.1382 307.3555 -320.5503 306.2783 -320.2241 c305.2012 -319.8975 303.7969 -319.8975 302.6865 -319.8975 c302.1641 -319.8975 300.7275 -319.8975 300.2051 -320.0933 c299.585 -320.3218 299.6826 -321.04 299.6826 -321.5952 C299.6826 -326.3296 lf*U*u315.2246 -334.9497 m315.2246 -337.4316 315.29 -338.6069 318.2285 -338.6069 c319.4043 -338.6069 320.9063 -338.2803 321.8203 -337.5293 c322.5713 -336.9092 323.1592 -335.7007 323.5186 -334.8193 c323.584 -334.6563 323.7148 -334.395 323.9102 -334.395 c324.2041 -334.395 324.2041 -334.6235 324.2041 -334.8521 c324.2041 -335.9619 323.8779 -337.105 323.8447 -338.2476 c323.8125 -339.0967 323.8779 -339.4883 322.9961 -339.4883 c319.8613 -339.4883 316.6611 -339.3579 313.5273 -339.3579 c312.417 -339.3579 311.3721 -339.4883 310.2617 -339.4883 c309.9678 -339.4883 309.707 -339.3579 309.707 -339.0313 c309.707 -338.6069 310.2295 -338.6069 310.5557 -338.6069 c312.8086 -338.6069 312.6455 -337.9863 312.6455 -335.9297 c312.6455 -322.5747 L312.6455 -320.5176 312.8086 -319.8975 310.5234 -319.8975 c310.2295 -319.8975 309.707 -319.8975 309.707 -319.4727 c309.707 -319.1138 309.9355 -319.0156 310.2617 -319.0156 c311.5029 -319.0156 312.6777 -319.1465 313.9189 -319.1465 c315.1592 -319.1465 316.4004 -319.0156 317.6406 -319.0156 c317.9346 -319.0156 318.1963 -319.1138 318.1963 -319.4727 c318.1963 -319.8975 317.6406 -319.8975 317.3477 -319.8975 c315.0615 -319.8975 315.2246 -320.5176 315.2246 -322.5747 C315.2246 -334.9497 lf*U*u328.2207 -326.3296 m328.2207 -327.8643 328.5137 -327.8643 329.8525 -327.8643 c330.832 -327.8643 332.5303 -327.897 333.8037 -327.7339 c334.6201 -327.6357 334.7832 -326.4277 334.9463 -325.481 c334.9795 -325.2852 335.0771 -324.9258 335.3711 -324.9258 c335.5342 -324.9258 335.7305 -324.9912 335.7305 -325.2524 c335.6973 -326.1665 335.6318 -327.146 335.5664 -328.0605 c335.6318 -329.1055 335.6973 -330.085 335.7305 -331.1294 c335.7305 -331.6519 335.5342 -331.7173 335.3711 -331.7173 c335.0771 -331.7173 334.9795 -331.3584 334.9463 -331.1621 c334.7832 -330.2153 334.5225 -329.2358 333.8037 -329.0728 c332.5303 -328.7788 330.832 -328.7788 329.8525 -328.7788 c328.5469 -328.7788 328.2207 -328.7788 328.2207 -329.8887 c328.2207 -335.5703 L328.2207 -338.5742 329.6572 -338.6069 332.2363 -338.6069 c335.0449 -338.6069 336.8398 -338.5415 337.9502 -335.6685 c338.0488 -335.4395 338.2773 -334.5581 338.6689 -334.5581 c338.8975 -334.5581 338.9951 -334.6885 338.9951 -334.9175 c338.9951 -335.1787 338.9297 -335.4395 338.8652 -335.7007 c338.375 -339.1621 L338.3428 -339.3906 338.2773 -339.3579 338.0156 -339.3579 c325.249 -339.3579 L324.5957 -339.3579 323.8779 -339.4883 323.2246 -339.4883 c322.9307 -339.4883 322.6689 -339.3579 322.6689 -338.9985 c322.6689 -338.6396 323.1914 -338.6069 323.5186 -338.6069 c325.7715 -338.6069 325.6406 -337.9541 325.6406 -335.8643 c325.6406 -322.5747 L325.6406 -320.5503 325.7715 -319.8975 323.5186 -319.8975 c323.1914 -319.8975 322.6689 -319.8975 322.6689 -319.5054 c322.6689 -319.1792 322.9307 -319.0156 323.2246 -319.0156 c325.249 -319.0156 327.3389 -319.1465 329.3633 -319.1465 c332.1709 -319.1465 334.9141 -319.0156 337.6895 -319.0156 c338.3096 -319.0156 338.1465 -319.7993 338.1465 -320.2241 c338.1465 -323.0317 L338.1465 -323.228 338.1787 -323.7178 337.8525 -323.7178 c337.5586 -323.7178 337.4277 -323.293 337.3301 -323.0645 c336.8398 -322.1504 L336.3506 -321.1382 335.8936 -320.5503 334.8164 -320.2241 c333.7383 -319.8975 332.334 -319.8975 331.2246 -319.8975 c330.7021 -319.8975 329.2646 -319.8975 328.7422 -320.0933 c328.1221 -320.3218 328.2207 -321.04 328.2207 -321.5952 C328.2207 -326.3296 lf*U*u343.9258 -329.3013 m341.542 -328.2563 339.1914 -326.9175 339.1914 -324.0117 c339.1914 -320.583 342.293 -318.4932 345.4932 -318.4932 c346.7666 -318.4932 348.6602 -318.7217 349.8682 -319.2119 c350.4893 -319.4404 350.4238 -319.832 350.4561 -320.4199 c350.4893 -321.2686 350.5537 -322.1177 350.5869 -322.9668 c350.5869 -323.1953 350.4561 -323.3584 350.2275 -323.3584 c349.8682 -323.3584 349.8027 -322.8359 349.7051 -322.6074 c348.9863 -320.3545 348.0068 -319.1465 345.46 -319.1465 c343.3057 -319.1465 341.248 -320.2563 341.248 -322.6401 c341.248 -325.4482 344.8398 -326.5908 346.9619 -327.5054 c348.04 -327.9951 349.4111 -328.6807 350.1953 -329.5298 c351.1416 -330.5747 351.7627 -332.0112 351.7627 -333.415 c351.7627 -335.2437 350.8809 -336.8765 349.4766 -338.0518 c348.0068 -339.2598 346.1465 -339.7495 344.252 -339.7495 c342.6523 -339.7495 340.6934 -339.2925 339.3223 -338.4761 c338.7666 -338.1172 338.8643 -337.2354 338.8643 -336.6479 c338.8643 -335.7988 338.8643 -334.9824 338.9629 -334.1338 c338.9951 -333.8726 339.0938 -333.4805 339.4521 -333.4805 c339.877 -333.4805 339.877 -334.2969 339.9092 -334.5581 c340.2363 -337.3662 341.7383 -339.1294 344.709 -339.1294 c347.1582 -339.1294 349.5742 -337.4639 349.5742 -334.8848 c349.5742 -332.2725 347.8115 -330.999 345.5908 -330.0195 C343.9258 -329.3013 lf*U*u369.2637 -323.1626 m369.2637 -323.4238 369.166 -323.5869 368.9043 -323.5869 c368.0557 -323.5869 367.7939 -319.4077 362.7334 -319.4077 c357.248 -319.4077 354.5371 -324.1094 354.5371 -329.0073 c354.5371 -331.3257 355.1904 -333.5132 356.5615 -335.4072 c358.0635 -337.4639 360.0879 -338.8682 362.7334 -338.8682 c367.7939 -338.8682 368.1855 -333.7417 369.0674 -333.7417 c369.3291 -333.7417 369.459 -333.9375 369.4268 -334.166 c369.2637 -336.811 L369.1982 -337.8232 369.2305 -337.8887 368.2188 -338.3784 c366.292 -339.2925 364.4639 -339.7495 362.3086 -339.7495 c356.3662 -339.7495 351.6318 -334.8193 351.6318 -329.04 c351.6318 -322.9995 356.9863 -318.4932 362.9619 -318.4932 c364.4307 -318.4932 366.7168 -318.8853 368.1211 -319.375 c369.0674 -319.7017 368.9375 -320.126 369.0352 -321.04 C369.2637 -323.1626 lf*U*u388.9521 -329.105 m388.9521 -331.5542 388.4629 -333.7417 386.9277 -335.7007 c385.3604 -337.6274 383.1406 -338.8354 380.626 -338.8354 c378.1445 -338.8354 375.8594 -337.8232 374.292 -335.9297 c372.6914 -334.0356 372.1045 -331.5542 372.1045 -329.105 c372.1045 -326.7544 372.6592 -324.3052 374.1611 -322.4443 c375.7285 -320.4526 378.0791 -319.375 380.626 -319.375 c383.0752 -319.375 385.2305 -320.4854 386.7979 -322.3462 c388.4297 -324.3379 388.9521 -326.5908 388.9521 -329.105 cf369.165 -329.105 m369.165 -335.0479 374.6836 -339.7495 380.5605 -339.7495 c386.7646 -339.7495 391.9238 -335.4072 391.9238 -329.105 c391.9238 -322.8032 386.7646 -318.4932 380.5605 -318.4932 c374.6836 -318.4932 369.165 -323.1626 369.165 -329.105 cf*U*u283.5854 -353.1787 m281.2021 -352.1338 278.8511 -350.7949 278.8511 -347.8892 c278.8511 -344.4604 281.9531 -342.3706 285.1528 -342.3706 c286.4263 -342.3706 288.3203 -342.5991 289.5283 -343.0894 c290.1484 -343.3179 290.083 -343.7095 290.1162 -344.2974 c290.1484 -345.146 290.2139 -345.9951 290.2471 -346.8442 c290.2471 -347.0728 290.1162 -347.2358 289.8877 -347.2358 c289.5283 -347.2358 289.4629 -346.7134 289.3652 -346.4849 c288.6465 -344.2319 287.667 -343.0239 285.1201 -343.0239 c282.9653 -343.0239 280.9082 -344.1338 280.9082 -346.5176 c280.9082 -349.3257 284.5 -350.4683 286.6221 -351.3828 c287.6997 -351.8726 289.0713 -352.5581 289.8545 -353.4072 c290.8018 -354.4521 291.4219 -355.8887 291.4219 -357.2925 c291.4219 -359.1211 290.54 -360.7539 289.1367 -361.9297 c287.667 -363.1377 285.8062 -363.627 283.9121 -363.627 c282.312 -363.627 280.353 -363.1699 278.9814 -362.3535 c278.4268 -361.9941 278.5244 -361.1133 278.5244 -360.5254 c278.5244 -359.6763 278.5244 -358.8599 278.6226 -358.0112 c278.6553 -357.75 278.7529 -357.3579 279.1123 -357.3579 c279.5366 -357.3579 279.5366 -358.1743 279.5693 -358.4355 c279.896 -361.2432 281.3979 -363.0068 284.3691 -363.0068 c286.8184 -363.0068 289.2344 -361.3418 289.2344 -358.7622 c289.2344 -356.1499 287.4712 -354.8765 285.251 -353.897 C283.5854 -353.1787 lf*U*u308.9238 -347.04 m308.9238 -347.3013 308.8252 -347.4644 308.5645 -347.4644 c307.7148 -347.4644 307.4541 -343.2852 302.3926 -343.2852 c296.9072 -343.2852 294.1973 -347.9868 294.1973 -352.8848 c294.1973 -355.2031 294.8506 -357.3906 296.2217 -359.2847 c297.7236 -361.3418 299.748 -362.7451 302.3926 -362.7451 c307.4541 -362.7451 307.8457 -357.6191 308.7275 -357.6191 c308.9883 -357.6191 309.1191 -357.8149 309.0869 -358.0435 c308.9238 -360.6885 L308.8584 -361.7012 308.8906 -361.7656 307.8789 -362.2559 c305.9521 -363.1699 304.124 -363.627 301.9688 -363.627 c296.0254 -363.627 291.291 -358.6968 291.291 -352.9175 c291.291 -346.877 296.6465 -342.3706 302.6211 -342.3706 c304.0908 -342.3706 306.377 -342.7627 307.7803 -343.2524 c308.7275 -343.5791 308.5967 -344.0034 308.6943 -344.9175 C308.9238 -347.04 lf*U*u311.3721 -346.4521 m311.3721 -344.395 311.5352 -343.7749 309.25 -343.7749 c308.9561 -343.7749 308.4336 -343.7749 308.4336 -343.3506 c308.4336 -342.9912 308.6621 -342.8931 308.9883 -342.8931 c310.2295 -342.8931 311.4053 -343.0239 312.6455 -343.0239 c313.8867 -343.0239 315.127 -342.8931 316.3682 -342.8931 c316.6621 -342.8931 316.9229 -342.9912 316.9229 -343.3506 c316.9229 -343.7749 316.3682 -343.7749 316.0742 -343.7749 c313.7881 -343.7749 313.9512 -344.395 313.9512 -346.4521 c313.9512 -359.8394 L313.9512 -361.9297 313.8213 -362.5166 316.0742 -362.5498 c316.3682 -362.5498 316.9229 -362.5166 316.9229 -362.9414 c316.9229 -363.3008 316.6621 -363.3662 316.3682 -363.3662 c315.127 -363.3662 313.9512 -363.2354 312.7109 -363.2354 c311.4697 -363.2354 310.2295 -363.3662 308.9883 -363.3662 c308.6943 -363.3662 308.4336 -363.3008 308.4336 -362.9414 c308.4336 -362.5166 308.9561 -362.5498 309.25 -362.5498 c311.5352 -362.5498 311.3721 -361.8965 311.3721 -359.8394 C311.3721 -346.4521 lf*U*u321.6895 -350.207 m321.6895 -351.7417 321.9834 -351.7417 323.3223 -351.7417 c324.3018 -351.7417 326 -351.7744 327.2734 -351.6113 c328.0898 -351.5132 328.2529 -350.3052 328.416 -349.3584 c328.4492 -349.1626 328.5469 -348.8032 328.8408 -348.8032 c329.0039 -348.8032 329.2002 -348.8687 329.2002 -349.1299 c329.167 -350.0439 329.1016 -351.0234 329.0361 -351.938 c329.1016 -352.9829 329.167 -353.9624 329.2002 -355.0068 c329.2002 -355.5293 329.0039 -355.5947 328.8408 -355.5947 c328.5469 -355.5947 328.4492 -355.2358 328.416 -355.0396 c328.2529 -354.0928 327.9922 -353.1133 327.2734 -352.9502 c326 -352.6563 324.3018 -352.6563 323.3223 -352.6563 c322.0166 -352.6563 321.6895 -352.6563 321.6895 -353.7661 c321.6895 -359.4478 L321.6895 -362.4521 323.127 -362.4844 325.7061 -362.4844 c328.5146 -362.4844 330.3096 -362.4189 331.4199 -359.5459 c331.5186 -359.3169 331.7471 -358.4355 332.1387 -358.4355 c332.3672 -358.4355 332.4648 -358.5659 332.4648 -358.7949 c332.4648 -359.0557 332.3994 -359.3169 332.334 -359.5781 c331.8447 -363.0391 L331.8125 -363.2676 331.7471 -363.2354 331.4854 -363.2354 c318.7188 -363.2354 L318.0654 -363.2354 317.3477 -363.3662 316.6943 -363.3662 c316.4004 -363.3662 316.1387 -363.2354 316.1387 -362.876 c316.1387 -362.5166 316.6611 -362.4844 316.9883 -362.4844 c319.2412 -362.4844 319.1104 -361.8311 319.1104 -359.7417 c319.1104 -346.4521 L319.1104 -344.4277 319.2412 -343.7749 316.9883 -343.7749 c316.6611 -343.7749 316.1387 -343.7749 316.1387 -343.3828 c316.1387 -343.0566 316.4004 -342.8931 316.6943 -342.8931 c318.7188 -342.8931 320.8086 -343.0239 322.833 -343.0239 c325.6406 -343.0239 328.3838 -342.8931 331.1592 -342.8931 c331.7793 -342.8931 331.6162 -343.6768 331.6162 -344.1016 c331.6162 -346.9092 L331.6162 -347.1055 331.6484 -347.5952 331.3223 -347.5952 c331.0283 -347.5952 330.8975 -347.1704 330.7998 -346.9419 c330.3096 -346.0278 L329.8203 -345.0156 329.3633 -344.4277 328.2852 -344.1016 c327.208 -343.7749 325.8037 -343.7749 324.6943 -343.7749 c324.1719 -343.7749 322.7344 -343.7749 322.2119 -343.9707 c321.5918 -344.1992 321.6895 -344.9175 321.6895 -345.4727 C321.6895 -350.207 lf*U*u349.4766 -346.4849 m349.4766 -344.4277 349.6074 -343.7749 347.3213 -343.7749 c347.0273 -343.7749 346.5049 -343.7749 346.5049 -343.4155 c346.5049 -343.0566 346.7666 -342.8931 347.0928 -342.8931 c348.0723 -342.8931 348.9863 -343.0239 349.9668 -343.0239 c350.9463 -343.0239 351.8604 -342.8931 352.8076 -342.8931 c353.1006 -342.8931 353.3623 -343.0566 353.3623 -343.4155 c353.3623 -343.7749 352.8398 -343.7749 352.5137 -343.7749 c350.2607 -343.7749 350.3906 -344.4604 350.3906 -346.4849 c350.3906 -363.0723 L350.3906 -363.2354 350.4561 -363.6924 350.1621 -363.6924 c349.8027 -363.6924 349.5098 -363.1699 349.3457 -362.9092 c335.6318 -345.0811 L335.6318 -359.8394 L335.6318 -361.8643 335.4688 -362.5498 337.7549 -362.5498 c338.0488 -362.5498 338.5713 -362.4521 338.5713 -362.876 c338.5713 -363.2354 338.3428 -363.3662 338.0156 -363.3662 c337.0361 -363.3662 336.1221 -363.2354 335.1426 -363.2354 c334.2285 -363.2354 333.249 -363.3662 332.3018 -363.3662 c331.9756 -363.3662 331.7139 -363.2354 331.7139 -362.876 c331.7139 -362.4521 332.2695 -362.5498 332.5625 -362.5498 c334.8486 -362.5498 334.6855 -361.8643 334.6855 -359.8394 c334.6855 -346.4849 L334.6855 -344.4277 334.8486 -343.7749 332.5625 -343.7749 c332.2695 -343.7749 331.7471 -343.7749 331.7471 -343.4155 c331.7471 -342.9258 332.1709 -342.8931 332.5303 -342.8931 c336.5791 -342.8931 L337.2646 -343.0566 337.5264 -343.5137 337.918 -344.0361 c349.4766 -359.0234 L349.4766 -346.4849 lf*U*u368.9053 -347.0859 m368.9053 -347.3472 368.8066 -347.5103 368.5459 -347.5103 c367.6973 -347.5103 367.4355 -343.3311 362.375 -343.3311 c356.8887 -343.3311 354.1787 -348.0327 354.1787 -352.9307 c354.1787 -355.249 354.832 -357.4365 356.2031 -359.3306 c357.7051 -361.3877 359.7295 -362.791 362.375 -362.791 c367.4355 -362.791 367.8271 -357.665 368.709 -357.665 c368.9707 -357.665 369.1006 -357.8608 369.0684 -358.0894 c368.9053 -360.7344 L368.8398 -361.7471 368.8721 -361.8115 367.8604 -362.3018 c365.9336 -363.2158 364.1055 -363.6729 361.9502 -363.6729 c356.0078 -363.6729 351.2734 -358.7427 351.2734 -352.9634 c351.2734 -346.9229 356.6279 -342.4165 362.6035 -342.4165 c364.0723 -342.4165 366.3584 -342.8086 367.7617 -343.2983 c368.709 -343.625 368.5781 -344.0493 368.6768 -344.9634 C368.9053 -347.0859 lf*U*u373.9336 -350.2529 m373.9336 -351.7876 374.2275 -351.7876 375.5654 -351.7876 c376.5459 -351.7876 378.2432 -351.8203 379.5166 -351.6572 c380.333 -351.5591 380.4961 -350.3511 380.6592 -349.4043 c380.6924 -349.2085 380.79 -348.8491 381.084 -348.8491 c381.2471 -348.8491 381.4434 -348.9146 381.4434 -349.1758 c381.4102 -350.0898 381.3457 -351.0693 381.2803 -351.9839 c381.3457 -353.0288 381.4102 -354.0083 381.4434 -355.0527 c381.4434 -355.5752 381.2471 -355.6406 381.084 -355.6406 c380.79 -355.6406 380.6924 -355.2817 380.6592 -355.0854 c380.4961 -354.1387 380.2354 -353.1592 379.5166 -352.9961 c378.2432 -352.7021 376.5459 -352.7021 375.5654 -352.7021 c374.2598 -352.7021 373.9336 -352.7021 373.9336 -353.812 c373.9336 -359.4937 L373.9336 -362.498 375.3701 -362.5303 377.9492 -362.5303 c380.7578 -362.5303 382.5537 -362.4648 383.6641 -359.5918 c383.7617 -359.3628 383.9902 -358.4814 384.3818 -358.4814 c384.6104 -358.4814 384.708 -358.6118 384.708 -358.8408 c384.708 -359.1016 384.6436 -359.3628 384.5781 -359.624 c384.0879 -363.085 L384.0557 -363.3135 383.9902 -363.2813 383.7285 -363.2813 c370.9619 -363.2813 L370.3086 -363.2813 369.5908 -363.4121 368.9375 -363.4121 c368.6436 -363.4121 368.3828 -363.2813 368.3828 -362.9219 c368.3828 -362.5625 368.9053 -362.5303 369.2314 -362.5303 c371.4844 -362.5303 371.3535 -361.877 371.3535 -359.7876 c371.3535 -346.498 L371.3535 -344.4736 371.4844 -343.8208 369.2314 -343.8208 c368.9053 -343.8208 368.3828 -343.8208 368.3828 -343.4287 c368.3828 -343.1025 368.6436 -342.939 368.9375 -342.939 c370.9619 -342.939 373.0518 -343.0698 375.0762 -343.0698 c377.8838 -343.0698 380.627 -342.939 383.4023 -342.939 c384.0225 -342.939 383.8594 -343.7227 383.8594 -344.1475 c383.8594 -346.9551 L383.8594 -347.1514 383.8926 -347.6411 383.5654 -347.6411 c383.2715 -347.6411 383.1416 -347.2163 383.043 -346.9878 c382.5537 -346.0737 L382.0635 -345.0615 381.6064 -344.4736 380.5293 -344.1475 c379.4512 -343.8208 378.0479 -343.8208 376.9375 -343.8208 c376.415 -343.8208 374.9785 -343.8208 374.4561 -344.0166 c373.835 -344.2451 373.9336 -344.9634 373.9336 -345.5186 C373.9336 -350.2529 lf*U*u280.8755 -369.9668 m280.8755 -367.9102 281.0386 -367.2891 278.7529 -367.2891 c278.4595 -367.2891 277.937 -367.2891 277.937 -366.8652 c277.937 -366.5059 278.1655 -366.4082 278.4917 -366.4082 c279.7329 -366.4082 280.9082 -366.5381 282.1489 -366.5381 c283.3896 -366.5381 284.6304 -366.4082 285.8711 -366.4082 c286.165 -366.4082 286.4263 -366.5059 286.4263 -366.8652 c286.4263 -367.2891 285.8711 -367.2891 285.5771 -367.2891 c283.292 -367.2891 283.4551 -367.9102 283.4551 -369.9668 c283.4551 -383.3545 L283.4551 -385.4443 283.3242 -386.0313 285.5771 -386.0645 c285.8711 -386.0645 286.4263 -386.0313 286.4263 -386.4561 c286.4263 -386.8154 286.165 -386.8809 285.8711 -386.8809 c284.6304 -386.8809 283.4551 -386.75 282.2144 -386.75 c280.9736 -386.75 279.7329 -386.8809 278.4917 -386.8809 c278.1982 -386.8809 277.937 -386.8154 277.937 -386.4561 c277.937 -386.0313 278.4595 -386.0645 278.7529 -386.0645 c281.0386 -386.0645 280.8755 -385.4111 280.8755 -383.3545 C280.8755 -369.9668 lf*U*u303.4053 -370 m303.4053 -367.9424 303.5361 -367.2891 301.25 -367.2891 c300.9561 -367.2891 300.4336 -367.2891 300.4336 -366.9307 c300.4336 -366.5713 300.6953 -366.4082 301.0215 -366.4082 c302.001 -366.4082 302.915 -366.5381 303.8945 -366.5381 c304.874 -366.5381 305.7891 -366.4082 306.7354 -366.4082 c307.0293 -366.4082 307.291 -366.5713 307.291 -366.9307 c307.291 -367.2891 306.7686 -367.2891 306.4414 -367.2891 c304.1885 -367.2891 304.3193 -367.9756 304.3193 -370 c304.3193 -386.5869 L304.3193 -386.75 304.3848 -387.207 304.0908 -387.207 c303.7314 -387.207 303.4375 -386.6846 303.2744 -386.4238 c289.5605 -368.5957 L289.5605 -383.3545 L289.5605 -385.3789 289.3975 -386.0645 291.6826 -386.0645 c291.9766 -386.0645 292.499 -385.9668 292.499 -386.3906 c292.499 -386.75 292.2705 -386.8809 291.9443 -386.8809 c290.9648 -386.8809 290.0508 -386.75 289.0713 -386.75 c288.1567 -386.75 287.1772 -386.8809 286.23 -386.8809 c285.9038 -386.8809 285.6426 -386.75 285.6426 -386.3906 c285.6426 -385.9668 286.1973 -386.0645 286.4912 -386.0645 c288.7773 -386.0645 288.6133 -385.3789 288.6133 -383.3545 c288.6133 -370 L288.6133 -367.9424 288.7773 -367.2891 286.4912 -367.2891 c286.1973 -367.2891 285.6753 -367.2891 285.6753 -366.9307 c285.6753 -366.4404 286.0996 -366.4082 286.4585 -366.4082 c290.5078 -366.4082 L291.1934 -366.5713 291.4541 -367.0283 291.8467 -367.5508 c303.4053 -382.5381 L303.4053 -370 lf*U*u310.9121 -376.7158 m308.5283 -375.6709 306.1777 -374.332 306.1777 -371.4258 c306.1777 -367.998 309.2793 -365.9082 312.4795 -365.9082 c313.7529 -365.9082 315.6465 -366.1367 316.8545 -366.626 c317.4746 -366.8545 317.4092 -367.2471 317.4424 -367.834 c317.4746 -368.6836 317.54 -369.5322 317.5732 -370.3809 c317.5732 -370.6094 317.4424 -370.7734 317.2139 -370.7734 c316.8545 -370.7734 316.7891 -370.251 316.6914 -370.0225 c315.9727 -367.7695 314.9932 -366.5605 312.4463 -366.5605 c310.291 -366.5605 308.2344 -367.6709 308.2344 -370.0547 c308.2344 -372.8623 311.8262 -374.0059 313.9482 -374.9199 c315.0264 -375.4092 316.3975 -376.0957 317.1807 -376.9443 c318.1279 -377.9893 318.748 -379.4258 318.748 -380.8301 c318.748 -382.6582 317.8662 -384.291 316.4629 -385.4668 c314.9932 -386.6748 313.1318 -387.1641 311.2383 -387.1641 c309.6387 -387.1641 307.6797 -386.707 306.3076 -385.8906 c305.7529 -385.5313 305.8506 -384.6504 305.8506 -384.0625 c305.8506 -383.2139 305.8506 -382.3975 305.9482 -381.5479 c305.9814 -381.2871 306.0791 -380.8955 306.4385 -380.8955 c306.8633 -380.8955 306.8633 -381.7109 306.8955 -381.9727 c307.2217 -384.7803 308.7236 -386.5439 311.6953 -386.5439 c314.1445 -386.5439 316.5605 -384.8789 316.5605 -382.2988 c316.5605 -379.6865 314.7969 -378.4141 312.5771 -377.4336 C310.9121 -376.7158 lf*U*u328.1846 -383.377 m328.1846 -385.4668 328.0537 -386.0869 330.3066 -386.0869 c330.6006 -386.0869 331.1563 -386.0537 331.1563 -386.4785 c331.1563 -386.8379 330.8945 -386.9033 330.6006 -386.9033 c329.3604 -386.9033 328.1846 -386.7725 326.9434 -386.7725 c325.7031 -386.7725 324.4619 -386.9033 323.2217 -386.9033 c322.9277 -386.9033 322.666 -386.8379 322.666 -386.4785 c322.666 -386.0537 323.1885 -386.0869 323.4824 -386.0869 c325.7686 -386.0869 325.6055 -385.4336 325.6055 -383.377 c325.6055 -368.2588 L325.6055 -367.083 325.1807 -367.3115 324.168 -367.3115 c321.1973 -367.3115 319.9893 -367.6055 318.4219 -370.2178 c318.291 -370.4463 318.0293 -371.002 317.7031 -371.002 c317.4746 -371.002 317.377 -370.8379 317.377 -370.6094 c317.377 -370.3809 317.5078 -369.9893 317.5723 -369.8262 c318.8457 -365.5811 L318.9111 -365.3525 318.9766 -365.124 319.2705 -365.124 c319.4668 -365.124 319.5645 -365.2871 319.5645 -365.4834 c319.5967 -365.7773 319.5645 -365.9736 319.8252 -366.1689 c320.25 -366.5283 320.9355 -366.4307 321.458 -366.4307 c333.3105 -366.4307 L334.1602 -366.4307 334.9766 -366.5938 335.3027 -365.6797 c335.4004 -365.418 335.4658 -365.124 335.792 -365.124 c336.25 -365.124 336.0859 -366.0713 336.0859 -366.2998 c335.8906 -370.2832 L335.8906 -370.5449 335.8574 -370.8379 335.499 -370.8379 c335.2695 -370.8379 335.2051 -370.5771 335.1396 -370.3809 c334.9111 -369.6953 334.6826 -368.7813 334.1924 -368.1611 c333.4746 -367.3115 332.5596 -367.3115 331.5479 -367.3115 c329.6543 -367.3115 L328.1846 -367.3115 328.1846 -367.2471 328.1846 -368.9121 C328.1846 -383.377 lf*U*u337.3916 -369.9893 m337.3916 -367.9326 337.5557 -367.3115 335.2695 -367.3115 c334.9756 -367.3115 334.4531 -367.3115 334.4531 -366.8877 c334.4531 -366.5283 334.6816 -366.4307 335.0088 -366.4307 c336.249 -366.4307 337.4248 -366.5605 338.665 -366.5605 c339.9063 -366.5605 341.1465 -366.4307 342.3877 -366.4307 c342.6816 -366.4307 342.9424 -366.5283 342.9424 -366.8877 c342.9424 -367.3115 342.3877 -367.3115 342.0938 -367.3115 c339.8086 -367.3115 339.9717 -367.9326 339.9717 -369.9893 c339.9717 -383.377 L339.9717 -385.4668 339.8408 -386.0537 342.0938 -386.0869 c342.3877 -386.0869 342.9424 -386.0537 342.9424 -386.4785 c342.9424 -386.8379 342.6816 -386.9033 342.3877 -386.9033 c341.1465 -386.9033 339.9717 -386.7725 338.7305 -386.7725 c337.4902 -386.7725 336.249 -386.9033 335.0088 -386.9033 c334.7148 -386.9033 334.4531 -386.8379 334.4531 -386.4785 c334.4531 -386.0537 334.9756 -386.0869 335.2695 -386.0869 c337.5557 -386.0869 337.3916 -385.4336 337.3916 -383.377 C337.3916 -369.9893 lf*U*u352.1504 -383.377 m352.1504 -385.4668 352.0195 -386.0869 354.2725 -386.0869 c354.5664 -386.0869 355.1221 -386.0537 355.1221 -386.4785 c355.1221 -386.8379 354.8604 -386.9033 354.5664 -386.9033 c353.3262 -386.9033 352.1504 -386.7725 350.9092 -386.7725 c349.6689 -386.7725 348.4277 -386.9033 347.1875 -386.9033 c346.8936 -386.9033 346.6318 -386.8379 346.6318 -386.4785 c346.6318 -386.0537 347.1543 -386.0869 347.4482 -386.0869 c349.7344 -386.0869 349.5713 -385.4336 349.5713 -383.377 c349.5713 -368.2588 L349.5713 -367.083 349.1465 -367.3115 348.1338 -367.3115 c345.1631 -367.3115 343.9551 -367.6055 342.3877 -370.2178 c342.2568 -370.4463 341.9961 -371.002 341.6689 -371.002 c341.4404 -371.002 341.3428 -370.8379 341.3428 -370.6094 c341.3428 -370.3809 341.4736 -369.9893 341.5381 -369.8262 c342.8115 -365.5811 L342.877 -365.3525 342.9424 -365.124 343.2363 -365.124 c343.4326 -365.124 343.5303 -365.2871 343.5303 -365.4834 c343.5625 -365.7773 343.5303 -365.9736 343.792 -366.1689 c344.2158 -366.5283 344.9014 -366.4307 345.4238 -366.4307 c357.2764 -366.4307 L358.126 -366.4307 358.9424 -366.5938 359.2686 -365.6797 c359.3662 -365.418 359.4316 -365.124 359.7578 -365.124 c360.2158 -365.124 360.0518 -366.0713 360.0518 -366.2998 c359.8564 -370.2832 L359.8564 -370.5449 359.8232 -370.8379 359.4648 -370.8379 c359.2363 -370.8379 359.1709 -370.5771 359.1055 -370.3809 c358.877 -369.6953 358.6484 -368.7813 358.1582 -368.1611 c357.4404 -367.3115 356.5254 -367.3115 355.5137 -367.3115 c353.6201 -367.3115 L352.1504 -367.3115 352.1504 -367.2471 352.1504 -368.9121 C352.1504 -383.377 lf*U*u376.4102 -371.2959 m376.4102 -370.5117 376.4434 -368.7158 376.0508 -368.0625 c375.6592 -367.3447 374.8428 -367.3115 374.0918 -367.3115 c373.7979 -367.3115 373.2109 -367.3447 373.2109 -366.8877 c373.2109 -366.5283 373.5693 -366.4307 373.8965 -366.4307 c374.876 -366.4307 375.8555 -366.5605 376.835 -366.5605 c377.6836 -366.5605 378.5322 -366.4307 379.3818 -366.4307 c379.6426 -366.4307 380.0674 -366.4629 380.0674 -366.8545 c380.0674 -367.3115 379.3164 -367.3115 379.0225 -367.3115 c377.1611 -367.3115 377.3896 -368.5527 377.3242 -370.0547 c377.3242 -380.2422 L377.3242 -382.332 377.292 -383.8994 375.5283 -385.4336 c373.8965 -386.8379 371.5449 -387.1641 369.3906 -387.1641 c367.4639 -387.1641 364.917 -386.8379 363.3174 -385.6621 c361.3252 -384.291 361.3906 -382.3975 361.3906 -380.2422 c361.3906 -369.9893 L361.3906 -367.9326 361.5537 -367.3115 359.2686 -367.3115 c358.9746 -367.3115 358.4521 -367.3115 358.4521 -366.8877 c358.4521 -366.5283 358.6807 -366.4307 359.0068 -366.4307 c360.248 -366.4307 361.4229 -366.5605 362.6641 -366.5605 c363.9043 -366.5605 365.1455 -366.4307 366.3867 -366.4307 c366.6797 -366.4307 366.9414 -366.5283 366.9414 -366.8877 c366.9414 -367.3115 366.3867 -367.3115 366.0928 -367.3115 c363.8066 -367.3115 363.9697 -367.9326 363.9697 -369.9893 c363.9697 -379.1973 L363.9697 -380.6338 363.9043 -383.0176 364.6553 -384.2256 c365.668 -385.8906 368.1494 -386.3477 369.9453 -386.3477 c371.8066 -386.3477 373.8965 -385.9238 375.2354 -384.585 c376.4434 -383.3438 376.4102 -381.875 376.4102 -380.2422 C376.4102 -371.2959 lf*U*u388.5244 -383.377 m388.5244 -385.4668 388.3936 -386.0869 390.6465 -386.0869 c390.9404 -386.0869 391.4951 -386.0537 391.4951 -386.4785 c391.4951 -386.8379 391.2344 -386.9033 390.9404 -386.9033 c389.6992 -386.9033 388.5244 -386.7725 387.2832 -386.7725 c386.043 -386.7725 384.8018 -386.9033 383.5615 -386.9033 c383.2676 -386.9033 383.0059 -386.8379 383.0059 -386.4785 c383.0059 -386.0537 383.5283 -386.0869 383.8223 -386.0869 c386.1084 -386.0869 385.9443 -385.4336 385.9443 -383.377 c385.9443 -368.2588 L385.9443 -367.083 385.5205 -367.3115 384.5078 -367.3115 c381.5371 -367.3115 380.3281 -367.6055 378.7617 -370.2178 c378.6309 -370.4463 378.3691 -371.002 378.043 -371.002 c377.8145 -371.002 377.7168 -370.8379 377.7168 -370.6094 c377.7168 -370.3809 377.8467 -369.9893 377.9121 -369.8262 c379.1855 -365.5811 L379.251 -365.3525 379.3164 -365.124 379.6104 -365.124 c379.8066 -365.124 379.9043 -365.2871 379.9043 -365.4834 c379.9365 -365.7773 379.9043 -365.9736 380.165 -366.1689 c380.5898 -366.5283 381.2754 -366.4307 381.7979 -366.4307 c393.6504 -366.4307 L394.499 -366.4307 395.3154 -366.5938 395.6426 -365.6797 c395.7402 -365.418 395.8057 -365.124 396.1318 -365.124 c396.5889 -365.124 396.4258 -366.0713 396.4258 -366.2998 c396.2305 -370.2832 L396.2305 -370.5449 396.1973 -370.8379 395.8379 -370.8379 c395.6094 -370.8379 395.5439 -370.5771 395.4795 -370.3809 c395.25 -369.6953 395.0215 -368.7813 394.5322 -368.1611 c393.8135 -367.3115 392.8994 -367.3115 391.8877 -367.3115 c389.9932 -367.3115 L388.5244 -367.3115 388.5244 -367.2471 388.5244 -368.9121 C388.5244 -383.377 lf*U*u400.3115 -373.7441 m400.3115 -375.2793 400.6055 -375.2793 401.9434 -375.2793 c402.9229 -375.2793 404.6211 -375.3115 405.8945 -375.1484 c406.7109 -375.0508 406.874 -373.8428 407.0371 -372.8955 c407.0703 -372.6992 407.168 -372.3398 407.4619 -372.3398 c407.625 -372.3398 407.8213 -372.4053 407.8213 -372.667 c407.7881 -373.5811 407.7227 -374.5605 407.6582 -375.4746 c407.7227 -376.5195 407.7881 -377.499 407.8213 -378.5439 c407.8213 -379.0664 407.625 -379.1318 407.4619 -379.1318 c407.168 -379.1318 407.0703 -378.7725 407.0371 -378.5771 c406.874 -377.6299 406.6133 -376.6504 405.8945 -376.4873 c404.6211 -376.1934 402.9229 -376.1934 401.9434 -376.1934 c400.6377 -376.1934 400.3115 -376.1934 400.3115 -377.3037 c400.3115 -382.9844 L400.3115 -385.9893 401.748 -386.0215 404.3271 -386.0215 c407.1357 -386.0215 408.9316 -385.9561 410.041 -383.083 c410.1396 -382.8545 410.3682 -381.9727 410.7598 -381.9727 c410.9883 -381.9727 411.0859 -382.1035 411.0859 -382.332 c411.0859 -382.5928 411.0205 -382.8545 410.9561 -383.1152 c410.4658 -386.5762 L410.4336 -386.8047 410.3682 -386.7725 410.1064 -386.7725 c397.3398 -386.7725 L396.6865 -386.7725 395.9688 -386.9033 395.3154 -386.9033 c395.0215 -386.9033 394.7607 -386.7725 394.7607 -386.4131 c394.7607 -386.0537 395.2832 -386.0215 395.6094 -386.0215 c397.8623 -386.0215 397.7314 -385.3682 397.7314 -383.2783 c397.7314 -369.9893 L397.7314 -367.9648 397.8623 -367.3115 395.6094 -367.3115 c395.2832 -367.3115 394.7607 -367.3115 394.7607 -366.9199 c394.7607 -366.5938 395.0215 -366.4307 395.3154 -366.4307 c397.3398 -366.4307 399.4297 -366.5605 401.4541 -366.5605 c404.2617 -366.5605 407.0049 -366.4307 409.7803 -366.4307 c410.4004 -366.4307 410.2373 -367.2139 410.2373 -367.6387 c410.2373 -370.4463 L410.2373 -370.6426 410.2695 -371.1318 409.9434 -371.1318 c409.6494 -371.1318 409.5186 -370.708 409.4209 -370.4795 c408.9316 -369.5645 L408.4414 -368.5527 407.9844 -367.9648 406.9072 -367.6387 c405.8291 -367.3115 404.4248 -367.3115 403.3154 -367.3115 c402.793 -367.3115 401.3564 -367.3115 400.834 -367.5078 c400.2129 -367.7363 400.3115 -368.4551 400.3115 -369.0098 C400.3115 -373.7441 lf*U*u395.5527 -322.5029 m395.5527 -320.4785 395.6504 -319.6948 397.9033 -319.6948 c399.2422 -319.6948 400.6143 -319.9233 401.626 -320.8374 c402.7686 -321.8174 403.3242 -323.3521 403.3242 -324.8213 c403.3242 -327.4331 401.3975 -329.7188 398.6875 -329.7188 c397.9365 -329.7188 396.7285 -329.4575 396.0752 -329.0659 c395.3896 -328.6743 395.5527 -328.0537 395.5527 -327.3354 c395.5527 -322.5029 Lf392.9736 -336.0532 m392.9736 -338.1104 393.1367 -338.7637 390.8506 -338.7637 c390.5566 -338.7637 390.0342 -338.731 390.0342 -339.1553 c390.0342 -339.5146 390.2959 -339.5796 390.5898 -339.5796 c391.8301 -339.5796 393.0713 -339.4492 394.3115 -339.4492 c395.5527 -339.4492 396.7285 -339.5796 397.9688 -339.5796 c398.2627 -339.5796 398.5244 -339.5146 398.5244 -339.1553 c398.5244 -338.731 397.9688 -338.7637 397.6748 -338.7637 c395.4219 -338.731 395.5527 -338.1431 395.5527 -336.0532 C395.5527 -330.666 l395.5527 -330.2412 395.4873 -329.7515 396.0752 -329.7515 c396.3359 -329.7515 396.5654 -329.8496 396.7939 -329.915 C398.3613 -330.4375 l398.8828 -330.6006 399.1123 -330.666 399.6992 -330.666 c403.0625 -330.666 406.0342 -328.1841 406.0342 -324.6904 c406.0342 -322.96 405.0869 -321.1968 403.6504 -320.2173 c402.3447 -319.3032 400.8428 -319.1069 399.2754 -319.1069 c397.5449 -319.1069 395.8467 -319.2378 394.083 -319.2378 c392.9082 -319.2378 391.7979 -319.1069 390.6221 -319.1069 c390.2959 -319.1069 390.0674 -319.2051 390.0674 -319.5645 c390.0674 -319.9888 390.5898 -319.9888 390.8838 -319.9888 c393.1689 -319.9888 392.9736 -320.6089 392.9736 -322.666 c392.9736 -336.0532 Lf*U*u409.3643 -326.4209 m409.3643 -327.9556 409.6582 -327.9556 410.9971 -327.9556 c411.9766 -327.9556 413.6748 -327.9883 414.9482 -327.8252 c415.7646 -327.7271 415.9277 -326.519 416.0908 -325.5723 c416.123 -325.3765 416.2217 -325.0171 416.5156 -325.0171 c416.6787 -325.0171 416.874 -325.0825 416.874 -325.3438 c416.8418 -326.2578 416.7764 -327.2373 416.7109 -328.1519 c416.7764 -329.1968 416.8418 -330.1763 416.874 -331.2207 c416.874 -331.7432 416.6787 -331.8086 416.5156 -331.8086 c416.2217 -331.8086 416.123 -331.4497 416.0908 -331.2534 c415.9277 -330.3066 415.666 -329.3271 414.9482 -329.1641 c413.6748 -328.8701 411.9766 -328.8701 410.9971 -328.8701 c409.6914 -328.8701 409.3643 -328.8701 409.3643 -329.98 c409.3643 -335.6616 L409.3643 -338.6655 410.8008 -338.6982 413.3809 -338.6982 c416.1885 -338.6982 417.9844 -338.6328 419.0947 -335.7598 c419.1924 -335.5308 419.4209 -334.6494 419.8135 -334.6494 c420.042 -334.6494 420.1396 -334.7798 420.1396 -335.0088 c420.1396 -335.2695 420.0742 -335.5308 420.0088 -335.792 c419.5195 -339.2534 L419.4863 -339.4819 419.4209 -339.4492 419.1602 -339.4492 c406.3936 -339.4492 L405.7402 -339.4492 405.0215 -339.5796 404.3691 -339.5796 c404.0752 -339.5796 403.8135 -339.4492 403.8135 -339.0898 c403.8135 -338.731 404.3359 -338.6982 404.6631 -338.6982 c406.916 -338.6982 406.7852 -338.0454 406.7852 -335.9556 c406.7852 -322.666 L406.7852 -320.6416 406.916 -319.9888 404.6631 -319.9888 c404.3359 -319.9888 403.8135 -319.9888 403.8135 -319.5967 c403.8135 -319.2705 404.0752 -319.1069 404.3691 -319.1069 c406.3936 -319.1069 408.4824 -319.2378 410.5068 -319.2378 c413.3154 -319.2378 416.0576 -319.1069 418.834 -319.1069 c419.4541 -319.1069 419.291 -319.8906 419.291 -320.3154 c419.291 -323.123 L419.291 -323.3193 419.3232 -323.8091 418.9971 -323.8091 c418.7031 -323.8091 418.5723 -323.3843 418.4746 -323.1558 c417.9844 -322.2417 L417.4951 -321.2295 417.0381 -320.6416 415.96 -320.3154 c414.8828 -319.9888 413.4785 -319.9888 412.3682 -319.9888 c411.8457 -319.9888 410.4092 -319.9888 409.8867 -320.1846 c409.2666 -320.4131 409.3643 -321.1313 409.3643 -321.6865 C409.3643 -326.4209 lf*UUu189.292 -386.4043 m190.4043 -386.9746 L198.0103 -372.1719 213.0674 -362.9756 229.6987 -362.9756 c246.3291 -362.9756 261.3857 -372.1709 268.9932 -386.9736 C270.105 -386.4014 L262.2822 -371.1807 246.7993 -361.7256 229.6987 -361.7256 c212.5967 -361.7256 197.1138 -371.1816 189.292 -386.4043 Cfu210.9014 -294.8193 m207.4624 -330.2969 L207.4297 -330.6353 207.6733 -330.938 208.0112 -330.9775 c208.3491 -331.0176 208.6567 -330.7798 208.7036 -330.4429 c209.7207 -323.1123 215.0073 -316.5903 222.1719 -313.8267 c222.4937 -313.7026 222.6543 -313.3408 222.5298 -313.0186 c222.4058 -312.6968 222.0439 -312.5361 221.7217 -312.6606 c216.1914 -314.7939 211.7417 -319.0605 209.3066 -324.2241 C210.125 -315.7852 212.1455 -294.9404 Y212.1475 -294.9199 212.1484 -294.8994 212.1484 -294.8789 c212.1484 -294.561 211.9067 -294.2891 211.5835 -294.2578 c211.2402 -294.2246 210.9346 -294.4761 210.9014 -294.8193 Cf247.8135 -294.2578 m247.4907 -294.2891 247.249 -294.561 247.249 -294.8789 c247.249 -294.8994 247.25 -294.9199 247.252 -294.9404 C249.2725 -315.7852 250.0903 -324.2241 V247.6558 -319.0605 243.2061 -314.7939 237.6758 -312.6606 c237.3535 -312.5361 236.9917 -312.6968 236.8677 -313.0186 c236.7432 -313.3408 236.9038 -313.7026 237.2256 -313.8267 c244.3901 -316.5903 249.6763 -323.1123 250.6934 -330.4429 c250.7402 -330.7798 251.0479 -331.0176 251.3857 -330.9775 c251.7236 -330.938 251.9673 -330.6353 251.9346 -330.2969 C248.4961 -294.8193 L248.4629 -294.4761 248.1572 -294.2246 247.8135 -294.2578 cfU*u1 D188.8711 -296.7051 m188.8711 -319.2173 207.1865 -337.5327 229.6987 -337.5327 c252.2109 -337.5327 270.5259 -319.2173 270.5259 -296.7051 c270.5259 -274.1924 252.2109 -255.8774 229.6987 -255.8774 c207.1865 -255.8774 188.8711 -274.1924 188.8711 -296.7051 cf0 D190.1211 -296.7051 m190.1211 -274.8818 207.8755 -257.1274 229.6987 -257.1274 c251.5215 -257.1274 269.2759 -274.8818 269.2759 -296.7051 c269.2759 -318.5283 251.5215 -336.2827 229.6987 -336.2827 c207.8755 -336.2827 190.1211 -318.5283 190.1211 -296.7051 cf*U*u1 D210.811 -296.7051 m210.811 -307.1201 219.2842 -315.5938 229.6987 -315.5938 c240.1133 -315.5938 248.5864 -307.1201 248.5864 -296.7051 c248.5864 -286.2905 240.1133 -277.8174 229.6987 -277.8174 c219.2842 -277.8174 210.811 -286.2905 210.811 -296.7051 cf0 D212.061 -296.7051 m212.061 -286.9795 219.9731 -279.0674 229.6987 -279.0674 c239.4243 -279.0674 247.3364 -286.9795 247.3364 -296.7051 c247.3364 -306.4312 239.4243 -314.3438 229.6987 -314.3438 c219.9731 -314.3438 212.061 -306.4312 212.061 -296.7051 cf*U273.8511 -296.0786 m269.8989 -296.0786 L269.8989 -297.3286 L272.3403 -297.3286 273.2261 -297.3286 V273.2261 -298.5527 273.2261 -384.8408 273.2261 -386.0645 C272.0024 -386.0645 187.3945 -386.0645 186.1709 -386.0645 C186.1709 -384.8408 186.1709 -298.5527 186.1709 -297.3286 C187.0566 -297.3286 189.4956 -297.3286 Y189.4956 -296.0786 L184.9209 -296.0786 L184.9209 -387.3145 L274.4761 -387.3145 L274.4761 -296.0786 L273.8511 -296.0786 Lf211.3784 -301.311 m229.6987 -384.5713 L248.0186 -301.311 L246.7979 -301.0425 L230.8369 -373.582 229.6987 -378.7549 V228.5605 -373.582 212.5991 -301.0425 Y211.3784 -301.311 Lf248.2051 -344.9692 m245.5908 -350.042 239.1821 -355.957 229.6968 -355.9854 c220.2432 -356.0137 213.8247 -350.0776 211.2012 -344.9858 c211.1924 -344.9692 195.2573 -316.208 Y194.1636 -316.8135 L210.0986 -345.5747 L212.875 -350.9639 219.6821 -357.2656 229.7007 -357.2354 c239.7466 -357.2051 246.541 -350.9263 249.3076 -345.5581 C265.2339 -316.8135 L264.1401 -316.208 L248.2051 -344.9692 LfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF